import type { MaskGenerator } from '../types/mask-generator';
export declare const getExpectedCursorPos: (args: {
    displayValue: string;
    oldDisplayValue: string;
    valueBeforeMask: string;
    newMask?: MaskGenerator | undefined;
    oldMask?: MaskGenerator | undefined;
    cursorPosition: number;
    lastWentBack: boolean | undefined;
}) => {
    position: number;
    wentBack?: boolean;
};
declare const MaskFunctions: {
    getExpectedCursorPos: (args: {
        displayValue: string;
        oldDisplayValue: string;
        valueBeforeMask: string;
        newMask?: MaskGenerator | undefined;
        oldMask?: MaskGenerator | undefined;
        cursorPosition: number;
        lastWentBack: boolean | undefined;
    }) => {
        position: number;
        wentBack?: boolean;
    };
    mask: (value: string, maskGenerator: MaskGenerator) => {
        maskedValue: string | null;
        mask: string;
        transformOffset: number;
    };
    processValue: (displayValue: string, maskGenerator: MaskGenerator) => string | null;
    unmask: (displayValue: string, maskGenerator: MaskGenerator | undefined) => string | null;
};
export default MaskFunctions;
