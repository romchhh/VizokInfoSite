import React from 'react';
import type { MaskGenerator } from '../types/mask-generator';
interface NativeSelection {
    start: number;
    end: number;
}
interface NativeSelectionWrapper {
    selection: NativeSelection;
}
interface TextInputProps {
    setNativeProps: (props: NativeSelectionWrapper) => void;
}
export declare const useNativeMask: <T extends TextInputProps>({ maskGenerator, value, onChange, keepMask, waitToUpdateCursor, ref: outerRef, }: {
    maskGenerator?: MaskGenerator | undefined;
    value?: string | undefined;
    onChange?: ((value: string) => void) | undefined;
    keepMask?: boolean | undefined;
    waitToUpdateCursor?: boolean | undefined;
    ref?: React.ForwardedRef<T> | undefined;
}) => {
    value: string | undefined;
    onChangeText: (text: string) => void;
    onSelectionChange: (event: {
        nativeEvent: NativeSelectionWrapper;
    }) => void;
    ref: React.MutableRefObject<T | null>;
};
export {};
